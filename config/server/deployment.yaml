apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  name: mtls-server
  namespace: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mtls-server
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: mtls-server
        app.kubernetes.io/part-of: mtls-server
      name: mtls-server
      namespace: proxy
    spec:
      volumes:
      - name: certs
        secret:
          secretName: server-certificate
      containers:
      - name: controller
        args:
        - server
        command:
        - /mtls
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: europe-docker.pkg.dev/srlinux/eu.gcr.io/mtls:latest
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /certs
          name: certs
      serviceAccountName: mtls-server
status: {}
